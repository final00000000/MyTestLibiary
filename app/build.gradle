plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.zhang.mydemo"
        minSdk 21
        targetSdk compileSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // 避免编译不必要的资源
        resConfigs "cn"

        //运行环境
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "int", "CPU_TYPE", "64"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }

        release {
            debuggable true
            jniDebuggable true
            //  Zipalign优化，资源对齐
            zipAlignEnabled true
            // 混淆
            minifyEnabled false
            // 移除无用的resource文件 必须和minifyEnabled同时打开
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //定义输出文件名
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def appName = "demo"
                    def time = releaseTime()
                    def buildType = variant.buildType.name
                    def newName
                    if (buildType == 'debug') {
                        newName = "${appName}_${defaultConfig.versionCode}_dbg.apk"
                    } else {
                        newName = "${appName}${defaultConfig.versionName}_${time}_prd.apk"
                    }
                    outputFileName = newName
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }
}
static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':UtilsLibiary')
}